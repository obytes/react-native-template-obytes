# 🔗 Links:
# Source file: https://github.com/rootstrap/react-native-template/blob/master/.github/workflows/lint-ts.yml
# Starter releasing process: https://rootstrap.github.io/react-native-template/ci-cd/app-releasing-process/

# ✍️ Description:
# This workflow is used to create a new version of the template and push a new tag to the repo.
# As this workflow will push code to the repo, we set up GitHub Bot as a Git user.
# This Workflow need to be triggered manually from the Actions tab in the repo.
#         1. Choose your release type (patch, minor, major)
#         2. The workflow will run the np-release script which runs the following steps:
#             - Bump the version in package.json based on the release type using np
#             - Run the prebuild of the app to align the package.json version with the native code
#             - Create a new tag with the new version
#             - Push the new tag to the repo
#

# 🚨 GITHUB SECRETS REQUIRED:
#         - GH_TOKEN: A GitHub token with write repo access.
#           You can generate one from here: https://github.com/settings/tokens
#           make sure to add it to the repo secrets with the name GH_TOKEN
#           Attention: Not to be confused with the GITHUB_TOKEN, this is a different token with different permissions.

name: New Template Version

on:
  workflow_dispatch:
    inputs:
      release-type:
        type: choice
        description: 'Release type (one of): patch, minor, major'
        required: true
        default: 'patch'
        options:
          - patch
          - minor
          - major

jobs:
  release:
    name: Create New Version and push new tag
    runs-on: ubuntu-latest
    environment:
      name: template
      url: https://github.com/rootstrap/react-native-template/releases/tag/v${{ env.NEW_VERSION }}
    permissions:
      contents: write
    steps:
      - name: 🔍 GH_TOKEN
        if: env.GH_TOKEN == ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo "GH_TOKEN=${GITHUB_TOKEN}" >> $GITHUB_ENV
      - name: 📦 Checkout project repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: 📝 Git User Setup
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: 📦 Setup Node + PNPM + install deps
        uses: ./.github/actions/setup-node-pnpm-install

      - name: 🏃‍♂️ Run Template release
        run: |
          pnpm app-release ${{ github.event.inputs.release-type }}

      - name: 📝 Get new package version
        run: |
          echo "NEW_VERSION=$(awk -F'"' '/"version": ".+"/{ print $4; exit; }' package.json)" >> $GITHUB_ENV

      - name: 🏃‍♂️Create A Github Release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ env.NEW_VERSION }}
          generateReleaseNotes: true
          draft: false
