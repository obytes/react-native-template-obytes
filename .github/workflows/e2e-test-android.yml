name: E2E Tests Android (Maestro)

on:
  workflow_dispatch:
  pull_request:
    branches: [main, master]

jobs:
  generate-test-apk:
    if: contains(github.event.pull_request.labels.*.name, 'android-test')
    name: Generate Test APK (Gradle)
    runs-on: ubuntu-latest

    steps:
      - name : ðŸ“¦ Checkout project repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name : ðŸ“¦ Setup Node + PNPM + install deps
        uses: ./.github/actions/setup-node-pnpm-install

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '11'
          cache: 'gradle'

      - name: Generate Test APK
        run: |
          cd  android
          chmod +x ./gradlew
          ./gradlew assembleRelease  --no-daemon
          cd ..
        env:
          EXPO_NO_DOTENV: 1

      - name: Upload Text APK
        uses: actions/upload-artifact@v3
        with:
          name: test-apk
          path: ./android/app/build/outputs/apk/release/app-release.apk

  test-android:
    name: Run Android Tests (Maestro)
    needs: generate-test-apk
    runs-on: macOS-latest

    steps:
      - name : ðŸ“¦ Checkout project repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name : ðŸ“¦ Install Maestro
        run : npm run install-maestro ## we use npm because we dont need to install deps again

      - name: Download Test APK
        uses: actions/download-artifact@v3
        with:
          name: test-apk
          path: ${{ github.workspace }}

      - name: 'Echo download path'
        run: echo ${{ github.workspace }}/app-release.apk

      - name: Gradle cache
        uses: gradle/gradle-build-action@v2

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-cache-${{ runner.os }}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."


      - name: Run tests with Maestro
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29 # Android 13
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: |
            adb install "${{ github.workspace }}/app-release.apk"
            $HOME/.maestro/bin/maestro test .maestro/ --env=APP_ID=com.obytes.development  --format junit
      - name: Store tests result
        uses: actions/upload-artifact@v3
        with:
          name: e2e_android_report
          path: |
            report.xml